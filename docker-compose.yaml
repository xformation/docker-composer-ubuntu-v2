version: "3.2"
services:
  database:
    image: postgres:9.4
    volumes:
      - type: volume
        source: dbdata
        target: /var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres        
  synectiks-monitoring:
    image: papu/synectiks-monitoring
    user: "root"
    depends_on:
      - prometheus
      - influxdb
    ports:
      - "3000:3000"
    network_mode: "host"
    restart: "always"
    volumes:
      - type: volume
        source: ./grafana/data
        target: /var/lib/grafana
      - type: volume
        source: ./grafana/provisioning
        target: /etc/grafana/provisioning/
    env_file:
      - ./grafana/conf/config.monitoring
  influxdb:
    image: influxdb
    user: "root"
    ports:
      - "8086:8086"
    network_mode: "host"
    restart: "always"
    volumes:
      - type: volume
        source: ./influx/data
        target: /var/lib/influxdb
  telegraf:
    container_name: telegraf
    image: telegraf:1.9.4-alpine
    network_mode: "host"
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
  prometheus:
    image: prom/prometheus:latest
    user: "root"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      - back-tier
    restart: always
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global
    cap_add:
      - ALL

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
#    deploy:
#      placement:
#        constraints:
#          - node.hostname == ${HOSTNAME}
  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - back-tier
    restart: always
    deploy:
      mode: global

volumes:
  dbdata:
  prometheus_data: {}
  grafana_data: {}
networks:
  front-tier:
  back-tier:
